{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","original_title","then","response","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","alt","videoId","opts","height","width","playerVars","autoplay","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchAction","fetchComedy","fetchHorror","fetchRomance","fetchDocumentaries","Banner","str","n","setmovie","Math","floor","random","length","style","backgroundImage","backdrop_path","backgroundPosition","original_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","id","App","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e5f4a6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL:\"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  \n  const opts = {\n    height: \"400\",\n    width: \"690\",\n\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      console.log(movie);\n      movieTrailer(\n        movie?.name || movie.original_title || movie.original_title || \"\"\n      )\n        .then((response) => {\n          console.log(response + \"betee\");\n          const urlParams = new URLSearchParams(new URL(response).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n          console.log(\"yup working\");\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{title}</h1>\n      <br></br>\n      <div className=\"row-posters\">\n        {movies.map((movie) => (\n          <img\n            onClick={() => handleClick(movie)}\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            src={`${base_url}${movie.poster_path}`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      <center>\n        {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n      </center>\n    </div>\n  );\n}\n\n// https://www.themoviedb.org/t/p/original/1Uhoi348GEg4DObGrVLNUqtKtdu.jpg (base url + jpg path)\n\nexport default Row;\n","const API_KEY = \"a9774a8039a16ea6f4d4b2c48fe199ed\";\n\nconst requests = {\n  fetchTrending:\n    \"/trending/all/week?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&language=en-US\",\n  fetchNetflixOriginals:\n    \"/discover/tv?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_networks=213\",\n  fetchTopRated: \n    `/movie/upcoming?api_key=${API_KEY}`,\n  fetchAction:\n    \"/discover/movie?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_genres=28\",\n  fetchComedy:\n    \"/discover/movie?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_genres=35\",\n\n  fetchHorror:\n    \"/discover/movie?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_genres=27\",\n  fetchRomance:\n    \"/discover/movie?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_genres=10749\",\n\n  fetchDocumentaries:\n    \"/discover/movie?api_key=a9774a8039a16ea6f4d4b2c48fe199ed&with_genres=99\",\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setmovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setmovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_content\">\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\n      </div>\n      <div className=\"banner-fade-bottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React,{useState,useEffect} from 'react'\nimport \"./Nav.css\"\n\n\nfunction Navbar() {\n\n    const [show,handleShow] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\",()=>{\n            if(window.scrollY > 100){\n                handleShow(true);\n            }\n            else handleShow(false);\n        })\n        return () => {\n            window.removeEventListener('scroll');\n        };\n\n\n    }, []);\n\n\n\n    return (\n        <div className={`nav ${show && \"nav_black\"}`}>\n            <img id=\"logo\" src=\"https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\"></img>\n            <img id=\"user\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"></img>\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","import './App.css';\nimport Row from './Row';\nimport requests from  './requests';\nimport Banner from './Banner';\nimport Nav from \"./Nav\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <br></br>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/><br></br>\n      <Row title=\"Upcoming Movies\" fetchUrl={requests.fetchTopRated}/><br></br>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/><br></br>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchAction}/><br></br>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorror}/><br></br>\n      <Row title=\"Roamnce Movies\" fetchUrl={requests.fetchRomance}/><br></br>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/><br></br>\n      <script type=\"text/javascript\" src=\"https://unpkg.com/movie-trailer\"></script>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}